---
name: "pluggable-transports-mac"
distro: "debian"
suites:
- "wheezy"
architectures:
- "i386"
packages:
- "unzip"
- "zip"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://git.torproject.org/pluggable-transports/goptlib.git"
  "dir": "goptlib"
- "url": "https://git.torproject.org/pluggable-transports/meek.git"
  "dir": "meek"
- "url": "https://github.com/agl/ed25519.git"
  "dir": "ed25519"
- "url": "https://github.com/dchest/siphash.git"
  "dir": "siphash"
- "url": "https://go.googlesource.com/crypto"
  "dir": "goxcrypto"
- "url": "https://go.googlesource.com/net"
  "dir": "goxnet"
- "url": "https://git.torproject.org/pluggable-transports/obfs4.git"
  "dir": "obfs4"
files:
- "versions"
- "go14.tar.gz"
- "go.tar.gz"
- "MacOSX10.7.sdk.tar.gz"
- "multiarch-darwin11-cctools127.2-gcc42-5666.3-llvmgcc42-2336.1-Linux-120724.tar.xz"
- "dzip.sh"
script: |
  INSTDIR="$HOME/install"
  source versions
  TBDIR="$INSTDIR/TorBrowserBundle.app"
  if [ "z$DATA_OUTSIDE_APP_DIR" = "z1" ]; then
    PTDIR="$TBDIR/Contents/MacOS/Tor/PluggableTransports"
    DOCSDIR="$TBDIR/Contents/Resources/TorBrowser/Docs"
    TORBINDIR="$TBDIR/Contents/MacOS/Tor"
  else
    PTDIR="$TBDIR/TorBrowser/Tor/PluggableTransports"
    DOCSDIR="$TBDIR/TorBrowser/Docs"
    TORBINDIR="$TBDIR/TorBrowser/Tor"
  fi
  export LIBRARY_PATH="$INSTDIR/lib"
  export REFERENCE_DATETIME
  export TZ=UTC
  export LC_ALL=C
  umask 0022
  #
  mkdir -p $PTDIR/
  mkdir -p $OUTDIR/
  #
  tar xaf multiarch-darwin*tar.xz
  # The 10.7 SDK is needed for Go: https://bugs.torproject.org/20023#comment:6
  tar xaf MacOSX10.7.sdk.tar.gz
  export PATH="$PATH:$HOME/build/apple-osx/bin/"
  #
  export AR=$HOME/build/apple-osx/bin/i686-apple-darwin11-ar
  export CC=$HOME/build/apple-osx/bin/i686-apple-darwin11-gcc
  export CXX=$HOME/build/apple-osx/bin/i686-apple-darwin11-g++

  # Building go 1.4.x
  # This is needed to bootstrap the go that we actually use
  # https://golang.org/doc/install/source#go14
  tar xvf go14.tar.gz --transform='s,^go\>,go1.4,'
  cd go1.4/src
  # Disable cgo to avoid conflicts with newer GCC. cgo is not needed for the bootstrap go.
  # https://github.com/golang/go/issues/13114#issuecomment-186922245
  # Disable CC etc. that are set up for cross builds.
  CGO_ENABLED=0 CC= CFLAGS= LDFLAGS= ./make.bash
  cd ../..
  export GOROOT_BOOTSTRAP="$PWD/go1.4"

  # Building go
  # Create a cc-for-target script that closes over CC, CFLAGS, and LDFLAGS.
  # Go's CC_FOR_TARGET only allows a command name, not a command with arguments.
  # https://github.com/golang/go/issues/15457
  CC_FOR_TARGET="$(pwd)/cc-for-target"
  echo "#!/bin/sh" > "$CC_FOR_TARGET"
  echo "exec $CC $CFLAGS $LDFLAGS -isysroot $HOME/build/MacOSX10.7.sdk -std=gnu99 \"\$@\"" >> "$CC_FOR_TARGET"
  chmod +x "$CC_FOR_TARGET"
  # http://golang.org/doc/install/source#environment
  export GOPATH="$HOME/go"
  export GOOS=darwin
  export GOARCH=386
  tar xvf go.tar.gz
  cd go/src
  # Remove a preprocessor directive that causes problems when building with the 10.7 SDK.
  # https://github.com/golang/go/issues/17732
  sed -i -e '/^#cgo CFLAGS:/s/-D__MAC_OS_X_VERSION_MAX_ALLOWED=1060//' crypto/x509/root_cgo_darwin.go
  CGO_ENABLED=1 CC_FOR_TARGET="$CC_FOR_TARGET" CC= CFLAGS= LDFLAGS= ./make.bash
  cd ../..
  export PATH="$PATH:$PWD/go/bin"

  # Building goptlib
  cd goptlib
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/git.torproject.org/pluggable-transports"
  ln -sf "$PWD" "$GOPATH/src/git.torproject.org/pluggable-transports/goptlib.git"
  go install git.torproject.org/pluggable-transports/goptlib.git
  cd ..

  # Building meek
  cd meek
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  cd meek-client
  # https://code.google.com/p/go/issues/detail?id=4714#c7
  # We need cgo for crypto/x509 support on mac.
  go build -ldflags '-s'
  cp -a meek-client $PTDIR
  cd ..
  cd meek-client-torbrowser
  go build -ldflags '-s'
  cp -a meek-client-torbrowser $PTDIR
  cd ..
  mkdir -p $DOCSDIR/meek
  cp -a README doc/*.1 $DOCSDIR/meek
  cd ..

  # Building go ed25519
  cd ed25519
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/github.com/agl/"
  ln -sf "$PWD" "$GOPATH/src/github.com/agl/ed25519"
  go install github.com/agl/ed25519/extra25519
  cd ..

  # Building go siphash
  cd siphash
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/github.com/dchest/"
  ln -sf "$PWD" "$GOPATH/src/github.com/dchest/siphash"
  go install github.com/dchest/siphash
  cd ..

  # Building golang.org/x/crypto (obfs4proxy > 0.0.3 || Go >= 1.4)
  cd goxcrypto
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/golang.org/x/"
  ln -sf "$PWD" "$GOPATH/src/golang.org/x/crypto"
  go install golang.org/x/crypto/curve25519
  go install golang.org/x/crypto/hkdf
  go install golang.org/x/crypto/nacl/secretbox
  cd ..

  # Building golang.org/x/net (obfs4proxy > 0.0.4)
  cd goxnet
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/golang.org/x/"
  ln -sf "$PWD" "$GOPATH/src/golang.org/x/net"
  go install golang.org/x/net/proxy
  cd ..

  # Building obfs4proxy
  cd obfs4
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  mkdir -p "$GOPATH/src/git.torproject.org/pluggable-transports"
  ln -sf "$PWD" "$GOPATH/src/git.torproject.org/pluggable-transports/obfs4.git"
  cd obfs4proxy
  go build -ldflags '-s'
  cp -a obfs4proxy $PTDIR
  cd ../..

  # Grabbing the result
  cd $INSTDIR
  ~/build/dzip.sh pluggable-transports-mac64-gbuilt.zip TorBrowserBundle.app
  cp pluggable-transports-mac64-gbuilt.zip $OUTDIR/
