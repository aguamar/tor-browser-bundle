---
name: "torbrowser-mac"
suites:
- "precise"
architectures:
- "amd64"
packages:
- "autoconf2.13"
- "unzip"
- "yasm"
- "zip"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://git.torproject.org/tor-browser.git"
  "dir": "tor-browser"
- "url": "https://github.com/wolfcw/libfaketime"
  "dir": "faketime"
files:
- "apple-uni-sdk-10.6_20110407-0.flosoft1_i386.deb"
- "x86_64-apple-darwin10.tar.xz"
- "re-dzip.sh"
- "dzip.sh"
- "fix-info-plist.py"
- "versions"
script: |
  INSTDIR="$HOME/install/"
  source versions
  export TZ=UTC
  export LC_ALL=C
  umask 0022
  #
  mkdir -p $INSTDIR/TorBrowser.app/Contents/MacOS/
  mkdir -p $OUTDIR/

  # Building libfaketime.
  cd faketime
  make
  DESTDIR="$INSTDIR/faketime" make install
  export LD_PRELOAD="$INSTDIR/faketime/usr/local/lib/faketime/libfaketime.so.1"
  export FAKETIME=$REFERENCE_DATETIME
  cd ..

  sudo dpkg -i *.deb
  tar -xavf x86_64-apple-darwin10.tar.xz
  # XXX: Needed for the otool patch. But we should replace that one with a
  # better solution. See: comment 15 in
  # https://bugzilla.mozilla.org/show_bug.cgi?id=936115
  export PATH=$PATH:/home/ubuntu/build/x-tools/x86_64-apple-darwin10/bin
  # FIXME: path hacks:
  sudo mkdir -p /System/Library/
  sudo ln -s /usr/lib/apple/SDKs/MacOSX10.6.sdk /usr/lib/apple/SDKs/MacOSX10.5.sdk
  sudo ln -s /usr/lib/apple/SDKs/MacOSX10.6.sdk /usr/lib/apple/SDKs/MacOSX10.5.sdk
  sudo ln -s /usr/lib/apple/SDKs/MacOSX10.6.sdk/System/Library/Frameworks/ /System/Library/
  sudo ln -s /usr/lib/apple/SDKs/MacOSX10.6.sdk/System/Library/PrivateFrameworks/ /System/Library/
  sudo ln -s /usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/libstdc++.6.dylib /usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/libstdc++.dylib
  #
  cd tor-browser
  mv .mozconfig-mac .mozconfig
  # .git and the src takes up a lot of useless space, and we need the space to build
  #git archive HEAD | tar -x -C $OUTDIR/src
  rm -rf .git
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  rm -f configure
  rm -f js/src/configure
  # |configure| can't cope with nano seconds faked. And even if we would revert
  # that feature it would hang sometimes for unknown but to libfaketime related
  # reasons.
  export LD_PRELOAD=""
  make -f client.mk configure CONFIGURE_ARGS="--with-tor-browser-version=${TORBROWSER_VERSION} --enable-update-channel=${TORBROWSER_UPDATE_CHANNEL}"
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  # We need libfaketime for all the timestamps e.g. written into the libraries.
  # BUT we need to exclude |make build| from it. Otherwise the build fails close
  # to the end, see #12812 comment 6 and #12461 comment 8 and later.
  # Additionally, we need to exclude |rsync| due to #10153 which is reproducible
  # reliably with the new libfaketime.
  export LD_PRELOAD="$INSTDIR/faketime/usr/local/lib/faketime/libfaketime.so.1"
  # XXX Order matters as for some reason the env variable has only the first
  # command assigned when it comes to the rsync parts in the build process.
  export FAKETIME_SKIP_CMDS="rsync,make"
  make BUILD_HOSTNAME="gitian" $MAKEOPTS -f client.mk build
  #
  make -C obj-macos package INNER_MAKE_PACKAGE=true
  cp -a obj-macos/dist/firefox/* $INSTDIR
  # Remove firefox-bin (we don't use it, see ticket #10126)
  rm -f $INSTDIR/TorBrowser.app/Contents/MacOS/firefox-bin
  #
  # Make MAR-based update tools available for use during the bundle phase.
  MARTOOLS=~/build/mar-tools
  mkdir -p $MARTOOLS
  cp -p config/createprecomplete.py $MARTOOLS/
  cp -p tools/update-packaging/*.sh $MARTOOLS/
  cp -p obj-*/dist/host/bin/mar $MARTOOLS/
  cp -p obj-*/dist/host/bin/mbsdiff $MARTOOLS/
  cd ~/build
   ~/build/dzip.sh mar-tools-mac${GBUILD_BITS}.zip mar-tools
  cp -p mar-tools-mac${GBUILD_BITS}.zip $OUTDIR/
  #
  cd $INSTDIR
  # Adjust the Info.plist file
  INFO_PLIST=TorBrowser.app/Contents/Info.plist
  mv $INFO_PLIST tmp.plist
  ~/build/fix-info-plist.py $TORBROWSER_VERSION < tmp.plist > $INFO_PLIST
  rm -f tmp.plist
  ~/build/re-dzip.sh TorBrowser.app/Contents/MacOS/omni.ja
  ~/build/re-dzip.sh TorBrowser.app/Contents/MacOS/webapprt/omni.ja
  if [ -f TorBrowser.app/Contents/MacOS/browser/omni.ja  ]; then # FF24 includes a third .ja
    ~/build/re-dzip.sh TorBrowser.app/Contents/MacOS/browser/omni.ja
  fi
  cd TorBrowser.app/
  ~/build/dzip.sh tor-browser-mac${GBUILD_BITS}-gbuilt.zip ./Contents
  cp tor-browser-mac${GBUILD_BITS}-gbuilt.zip $OUTDIR
