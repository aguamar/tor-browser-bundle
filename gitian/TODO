Short Term:
 - Include input hashes in bundle README
 - Source integrity
   - More git repos need signed tags
 - Clean up old paths (requires Tor Launcher commits)
   - Remove FirefoxPortable paths for Windows
   - Relocate torrc to Library/Tor for MacOS
 - Hardening options
   - http://wiki.debian.org/Hardening
   - Can we randomize stack canaries each release, etc?

Mid Term:
 - DMGs for Mac
   https://trac.torproject.org/projects/tor/ticket/4261
 - Universal binaries for Mac?
   - Usability win, but gettor loss (we're at 23M right now)
   - https://developer.mozilla.org/en-US/docs/Mac_OS_X_Universal_Binaries
   - "[EXTRA_]{CFLAGS,CXXFLAGS}="-arch i386 -arch x86_64"
     - http://opensource.apple.com/source/gcc/gcc-5666.3/driverdriver.c
       calls i686-apple-darwin11-gcc twice (once with -m32 and -m64)
       and then calls 'lipo' to stich the binaries together
 - Fix windows issues:
   - Link to DirectX via Wine (for WebGL)
     - Weird C++ stdext namespace issues remain :/
   - Accesibility still fails :/
     - https://bugzilla.mozilla.org/show_bug.cgi?id=815581
       - Has conflicts with FF17-ESR :/
       - Can we just pull the whole accessibility dir?
 - If Tor Launcher fails to load, the browser still can launch
   - Missing/Partial Localization strings can cause this..
   - I think we don't care? Torbutton's new tor test should fail..

Long Term:
 - Offline building
   - Requires special VM setup.
 - Compile the toolchain, too?
   - Doing so might allow us to build deterministically
     using other Linux distributions as our base image
     - Defense in depth against distribution-wide compromise
     - Though we may still have issues with linking against
       OS shared libraries if the versions don't match.
       - Build them too? Or is it safe to ship reference link
         stubs?
 - FIPS-140 in Firefox build is non-deterministic
   - Only seems enabled for Linux??
